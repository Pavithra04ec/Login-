var cov_ivb5yqb46=function(){var path="C:\\Users\\Admin\\Pavithra\\Example\\app.js";var hash="12b599343ffd55999d2fe2a5473660c4283772f6";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Admin\\Pavithra\\Example\\app.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:12},end:{line:2,column:21}},"2":{start:{line:3,column:15},end:{line:3,column:50}},"3":{start:{line:6,column:17},end:{line:6,column:39}},"4":{start:{line:7,column:0},end:{line:7,column:51}},"5":{start:{line:8,column:0},end:{line:8,column:27}},"6":{start:{line:10,column:0},end:{line:10,column:12}},"7":{start:{line:12,column:21},end:{line:12,column:53}},"8":{start:{line:13,column:0},end:{line:13,column:36}},"9":{start:{line:15,column:17},end:{line:15,column:36}},"10":{start:{line:17,column:0},end:{line:19,column:3}},"11":{start:{line:18,column:4},end:{line:18,column:29}},"12":{start:{line:22,column:13},end:{line:22,column:37}},"13":{start:{line:23,column:0},end:{line:25,column:2}},"14":{start:{line:24,column:4},end:{line:24,column:47}},"15":{start:{line:26,column:0},end:{line:26,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:106},end:{line:17,column:107}},loc:{start:{line:17,column:125},end:{line:19,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:17},end:{line:23,column:18}},loc:{start:{line:23,column:23},end:{line:25,column:1}},line:23}},branchMap:{"0":{loc:{start:{line:22,column:13},end:{line:22,column:37}},type:"binary-expr",locations:[{start:{line:22,column:13},end:{line:22,column:29}},{start:{line:22,column:33},end:{line:22,column:37}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_ivb5yqb46.s[0]++,require('express'));const app=(cov_ivb5yqb46.s[1]++,express());const router=(cov_ivb5yqb46.s[2]++,require('../Example/routes/router'));// body-parser is a middleware function for handling json,raw text, url encoded form data.
var bodyParser=(cov_ivb5yqb46.s[3]++,require('body-parser'));cov_ivb5yqb46.s[4]++;app.use(bodyParser.urlencoded({extended:true}));cov_ivb5yqb46.s[5]++;app.use(bodyParser.json());cov_ivb5yqb46.s[6]++;router(app);var authController=(cov_ivb5yqb46.s[7]++,require('./auth/authcontroller'));cov_ivb5yqb46.s[8]++;app.use('/api/auth',authController);const mongoose=(cov_ivb5yqb46.s[9]++,require('mongoose'));//This  create a database and connect to mongodb server runnig on port : 27017.
cov_ivb5yqb46.s[10]++;mongoose.connect("mongodb://localhost:27017/EmployeeDb",{useCreateIndex:true,useNewUrlParser:true},function(err,db){cov_ivb5yqb46.f[0]++;cov_ivb5yqb46.s[11]++;console.log("connected");});// we will make server configuration on the specified port.
const port=(cov_ivb5yqb46.s[12]++,(cov_ivb5yqb46.b[0][0]++,process.env.PORT)||(cov_ivb5yqb46.b[0][1]++,5000));cov_ivb5yqb46.s[13]++;app.listen(port,()=>{cov_ivb5yqb46.f[1]++;cov_ivb5yqb46.s[14]++;console.log(`Server connected on ${port}`);});cov_ivb5yqb46.s[15]++;module.exports=app;