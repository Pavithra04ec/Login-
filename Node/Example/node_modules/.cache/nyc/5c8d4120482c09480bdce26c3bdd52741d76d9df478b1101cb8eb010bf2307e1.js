var cov_7z5ql3v56=function(){var path="C:\\Users\\Admin\\Pavithra\\Example\\routes\\router.js";var hash="9afb8d3c6649f740c5a17c4f0ca1b051b74fc304";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Admin\\Pavithra\\Example\\routes\\router.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:3,column:15},end:{line:3,column:24}},"2":{start:{line:4,column:19},end:{line:4,column:55}},"3":{start:{line:5,column:20},end:{line:5,column:50}},"4":{start:{line:8,column:0},end:{line:25,column:1}},"5":{start:{line:11,column:4},end:{line:11,column:59}},"6":{start:{line:13,column:4},end:{line:13,column:73}},"7":{start:{line:16,column:4},end:{line:16,column:62}},"8":{start:{line:19,column:4},end:{line:19,column:69}},"9":{start:{line:22,column:4},end:{line:22,column:72}},"10":{start:{line:24,column:4},end:{line:24,column:20}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:17},end:{line:8,column:18}},loc:{start:{line:8,column:32},end:{line:25,column:1}},line:8}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_7z5ql3v56.s[0]++,require('express'));//router object include methods for routing http request.
const router=(cov_7z5ql3v56.s[1]++,express());const controller=(cov_7z5ql3v56.s[2]++,require('../controllers/controller'));const verifyToken=(cov_7z5ql3v56.s[3]++,require("../auth/verifyToken"));cov_7z5ql3v56.s[4]++;module.exports=function(app){cov_7z5ql3v56.f[0]++;cov_7z5ql3v56.s[5]++;// This is used to read all objects in a collection.
router.get('/api',verifyToken,controller.getEmployee);// This is used to read the objects of specified Id in a collection.
cov_7z5ql3v56.s[6]++;router.get('/api/Employee/',verifyToken,controller.getEmployeeById);// This is used to create a new object in a collection.
cov_7z5ql3v56.s[7]++;router.post('/api',verifyToken,controller.postEmployee);// This is used to update an existing object in a collection.
cov_7z5ql3v56.s[8]++;router.put('/api/Employee/',verifyToken,controller.putEmployee);// This is used to delete the object of a specified Id in a collection.
cov_7z5ql3v56.s[9]++;router.delete('/api/Employee/',verifyToken,controller.delEmployee);cov_7z5ql3v56.s[10]++;app.use(router);};